{"ast":null,"code":"import _objectSpread from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/src/components/QuoteTable.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions';\nimport { withStyles } from '@material-ui/core/styles';\nimport QuoteRow from './QuoteRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nvar CustomTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    },\n    row: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  };\n};\n\nvar QuoteTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuoteTable, _Component);\n\n  function QuoteTable() {\n    _classCallCheck(this, QuoteTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(QuoteTable).apply(this, arguments));\n  }\n\n  _createClass(QuoteTable, [{\n    key: \"render\",\n    value: function render() {\n      var quotes = this.props.quotes;\n      return React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(CustomTableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Quote\"), React.createElement(CustomTableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Author\"), React.createElement(CustomTableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Category\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, quotes.map(function (quote, index) {\n        return React.createElement(QuoteRow, {\n          quote: quote,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return QuoteTable;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    quotes: state.quotes.data,\n    loading: state.quotes.loading,\n    error: state.quotes.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(_objectSpread({}, actions.quotes), dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps).withStyles(styles)(QuoteTable));","map":{"version":3,"sources":["/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/src/components/QuoteTable.js"],"names":["React","Component","withRouter","connect","bindActionCreators","actions","withStyles","QuoteRow","Table","TableBody","TableHead","TableRow","Paper","CustomTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","styles","root","width","marginTop","spacing","unit","overflowX","table","minWidth","row","background","default","QuoteTable","quotes","props","classes","map","quote","index","mapStateToProps","state","data","loading","error","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,IAAMC,eAAe,GAAGP,UAAU,CAAC,UAAAQ,KAAK;AAAA,SAAK;AACzCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC,KADlC;AAEJC,MAAAA,KAAK,EAAEN,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBG;AAFxB,KADmC;AAKzCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN;AALmC,GAAL;AAAA,CAAN,CAAV,CAQlBC,SARkB,CAAxB;;AAUE,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAX,KAAK;AAAA,SAAK;AACvBY,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,MADH;AAEJC,MAAAA,SAAS,EAAEd,KAAK,CAACe,OAAN,CAAcC,IAAd,GAAqB,CAF5B;AAGJC,MAAAA,SAAS,EAAE;AAHP,KADiB;AAMvBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL,KANgB;AASvBC,IAAAA,GAAG,EAAE;AACH,4BAAsB;AACpBlB,QAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAckB,UAAd,CAAyBC;AADtB;AADnB;AATkB,GAAL;AAAA,CAApB;;IAgBIC,U;;;;;;;;;;;;;6BAEO;AACL,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAxB;AACA,aACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEE,OAAO,CAACd,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEc,OAAO,CAACR,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CADA,CADJ,EAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKM,MAAM,CAACG,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR;AAAA,eAAkB,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAED,KAAjB;AAAwB,UAAA,GAAG,EAAEC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB;AAAA,OAAX,CADL,CARJ,CADA,CADJ;AAiBH;;;;EArBoB1C,S;;AAwBzB,IAAM2C,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAChC,SAAO;AACNP,IAAAA,MAAM,EAAEO,KAAK,CAACP,MAAN,CAAaQ,IADf;AAENC,IAAAA,OAAO,EAAEF,KAAK,CAACP,MAAN,CAAaS,OAFhB;AAGNC,IAAAA,KAAK,EAAEH,KAAK,CAACP,MAAN,CAAaU;AAHd,GAAP;AAKA,CAND;;AAQA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACtC,SAAO9C,kBAAkB,mBAAMC,OAAO,CAACiC,MAAd,GAAwBY,QAAxB,CAAzB;AACA,CAFD;;AAIA,eAAehD,UAAU,CACxBC,OAAO,CACNyC,eADM,EAENK,kBAFM,CAAP,CAGE3C,UAHF,CAGamB,MAHb,EAGqBY,UAHrB,CADwB,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport QuoteRow from './QuoteRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst CustomTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n  \n  const styles = theme => ({\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto',\n    },\n    table: {\n      minWidth: 700,\n    },\n    row: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default,\n      },\n    },\n  });\n\nclass QuoteTable extends Component {\n\n    render() {\n        let quotes = this.props.quotes;\n        return (\n            <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                <TableRow>\n                    <CustomTableCell>Quote</CustomTableCell>\n                    <CustomTableCell align=\"right\">Author</CustomTableCell>\n                    <CustomTableCell align=\"right\">Category</CustomTableCell>\n                </TableRow>\n                </TableHead>\n                <TableBody>\n                    {quotes.map((quote, index) => <QuoteRow quote={quote} key={index} /> )}\n                </TableBody>\n            </Table>\n            </Paper>\n                \n        );\n    }\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tquotes: state.quotes.data,\n\t\tloading: state.quotes.loading,\n\t\terror: state.quotes.error,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn bindActionCreators({ ...actions.quotes }, dispatch);\n};\n\nexport default withRouter(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t).withStyles(styles)(QuoteTable)\n);"]},"metadata":{},"sourceType":"module"}