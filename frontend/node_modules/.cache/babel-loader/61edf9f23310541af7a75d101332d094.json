{"ast":null,"code":"import _objectSpread from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/src/components/Quotes.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions';\nimport AddQuote from './AddQuote';\nimport QuoteTable from './QuoteTable';\n\nvar Quotes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Quotes, _Component);\n\n  function Quotes(props) {\n    _classCallCheck(this, Quotes);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Quotes).call(this, props));\n  }\n\n  _createClass(Quotes, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          quotes = _this$props.quotes,\n          loadQuotes = _this$props.loadQuotes;\n\n      if (!quotes) {\n        loadQuotes();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          quotes = _this$props2.quotes,\n          loading = _this$props2.loading,\n          error = _this$props2.error;\n\n      if (error) {\n        return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \" \", error, \" \"));\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, quotes ? React.createElement(QuoteTable, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }) // quotes.map((quote, index) => <li key={index}> {quote.quote}  </li> )\n      : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Loading...\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(AddQuote, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Quotes;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    quotes: state.quotes.data,\n    loading: state.quotes.loading,\n    error: state.quotes.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(_objectSpread({}, actions.quotes), dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Quotes));","map":{"version":3,"sources":["/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/src/components/Quotes.js"],"names":["React","Component","withRouter","connect","bindActionCreators","actions","AddQuote","QuoteTable","Quotes","props","quotes","loadQuotes","loading","error","mapStateToProps","state","data","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,M;;;;;AAEF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,+EACXA,KADW;AAElB;;;;yCAEoB;AAAA,wBACY,KAAKA,KADjB;AAAA,UACXC,MADW,eACXA,MADW;AAAA,UACHC,UADG,eACHA,UADG;;AAEnB,UAAI,CAACD,MAAL,EAAa;AACXC,QAAAA,UAAU;AACX;AACF;;;6BAGQ;AAAA,yBAC4B,KAAKF,KADjC;AAAA,UACCC,MADD,gBACCA,MADD;AAAA,UACSE,OADT,gBACSA,OADT;AAAA,UACkBC,KADlB,gBACkBA,KADlB;;AAEP,UAAIA,KAAJ,EAAW;AACT,eACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAKA,KAAL,MADF,CADF;AAKD;;AACD,aACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,MAAM,GACL,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,CAEL;AAFK,QAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJN,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,CADF;AAeD;;;;EAtCgBT,S;;AAyCrB,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAChC,SAAO;AACNL,IAAAA,MAAM,EAAEK,KAAK,CAACL,MAAN,CAAaM,IADf;AAENJ,IAAAA,OAAO,EAAEG,KAAK,CAACL,MAAN,CAAaE,OAFhB;AAGNC,IAAAA,KAAK,EAAEE,KAAK,CAACL,MAAN,CAAaG;AAHd,GAAP;AAKA,CAND;;AAQA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACtC,SAAOd,kBAAkB,mBAAMC,OAAO,CAACK,MAAd,GAAwBQ,QAAxB,CAAzB;AACA,CAFD;;AAIA,eAAehB,UAAU,CACxBC,OAAO,CACNW,eADM,EAENG,kBAFM,CAAP,CAGET,MAHF,CADwB,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as actions from '../actions';\nimport AddQuote from './AddQuote';\nimport QuoteTable from './QuoteTable';\n\nclass Quotes extends Component {\n\n    constructor(props) {\n      super(props);\n    }\n\n    componentWillMount() {\n      const { quotes, loadQuotes } = this.props;\n      if (!quotes) {\n        loadQuotes();\n      }\n    }\n\n\n    render() {\n      const { quotes, loading, error } = this.props;\n      if (error) {\n        return (\n          <>\n            <p> {error} </p>\n          </>\n        );\n      }\n      return (\n        <>\n          <ul>\n            {quotes ?\n              <QuoteTable />\n              // quotes.map((quote, index) => <li key={index}> {quote.quote}  </li> )\n              : <p>Loading...</p>\n            }\n          </ul>\n          <br />\n          <div>\n            <AddQuote />\n          </div>\n        </>\n      );\n    }\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tquotes: state.quotes.data,\n\t\tloading: state.quotes.loading,\n\t\terror: state.quotes.error,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn bindActionCreators({ ...actions.quotes }, dispatch);\n};\n\nexport default withRouter(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t)(Quotes)\n);"]},"metadata":{},"sourceType":"module"}