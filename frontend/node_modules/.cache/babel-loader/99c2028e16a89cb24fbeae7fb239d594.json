{"ast":null,"code":"import _objectSpread from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/src/components/AddQuote.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nvar REACT_APP_DB_HOST = process.env.REACT_APP_DB_HOST;\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    }\n  };\n};\n\nvar AddQuote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddQuote, _Component);\n\n  function AddQuote(props) {\n    var _this;\n\n    _classCallCheck(this, AddQuote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddQuote).call(this, props));\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClickClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.snackbarClose = function () {\n      _this.setState({\n        snackbarOpen: false\n      });\n    };\n\n    _this.state = {\n      quote: '',\n      author: '',\n      category: '',\n      open: false,\n      snackbarOpen: false\n    };\n    _this.addQuote = _this.addQuote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFieldChange = _this.onFieldChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.snackbarClose = _this.snackbarClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickClose = _this.handleClickClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddQuote, [{\n    key: \"onFieldChange\",\n    value: function onFieldChange(name, e) {\n      this.setState(_defineProperty({}, name, e));\n    }\n  }, {\n    key: \"addQuote\",\n    value: function () {\n      var _addQuote = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this$state, quote, author, category, authorResponse, categoryResponse, categoryJson, authorJson, quoteResponse, quoteJson;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$state = this.state, quote = _this$state.quote, author = _this$state.author, category = _this$state.category;\n                _context.prev = 1;\n                _context.next = 4;\n                return fetch(\"\".concat(REACT_APP_DB_HOST, \"/api/author\"), {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    name: author\n                  })\n                });\n\n              case 4:\n                authorResponse = _context.sent;\n                _context.next = 7;\n                return fetch(\"\".concat(REACT_APP_DB_HOST, \"/api/category\"), {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    category: category\n                  })\n                });\n\n              case 7:\n                categoryResponse = _context.sent;\n                _context.next = 10;\n                return categoryResponse.json();\n\n              case 10:\n                categoryJson = _context.sent;\n                _context.next = 13;\n                return authorResponse.json();\n\n              case 13:\n                authorJson = _context.sent;\n\n                if (!((authorResponse.status === 200 || authorResponse.status === 400) && (categoryResponse.status === 200 || categoryResponse.status === 400))) {\n                  _context.next = 23;\n                  break;\n                }\n\n                _context.next = 17;\n                return fetch(\"\".concat(REACT_APP_DB_HOST, \"/api/quote\"), {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    category: categoryJson.category._id,\n                    author: authorJson.author._id,\n                    quote: quote\n                  })\n                });\n\n              case 17:\n                quoteResponse = _context.sent;\n\n                if (!(quoteResponse.status === 200)) {\n                  _context.next = 23;\n                  break;\n                }\n\n                _context.next = 21;\n                return quoteResponse.json();\n\n              case 21:\n                quoteJson = _context.sent;\n                console.log(\"Quote added: \\\"\" + quoteJson.quote + \"\\\"\");\n\n              case 23:\n                _context.next = 28;\n                break;\n\n              case 25:\n                _context.prev = 25;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(\"ERROR: \", _context.t0);\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 25]]);\n      }));\n\n      function addQuote() {\n        return _addQuote.apply(this, arguments);\n      }\n\n      return addQuote;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Add Quote\"), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClickClose,\n        \"aria-labelledby\": \"simple-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Add Quote\"), React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"on\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Category\",\n        onChange: function onChange(e) {\n          return _this2.onFieldChange('category', e.target.value);\n        },\n        className: classes.textField,\n        margin: \"normal\",\n        fullWidth: true,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        label: \"Quote\",\n        multiline: true,\n        onChange: function onChange(e) {\n          return _this2.onFieldChange('quote', e.target.value);\n        },\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Author\",\n        onChange: function onChange(e) {\n          return _this2.onFieldChange('author', e.target.value);\n        },\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"secondary\",\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.addQuote,\n        color: \"primary\",\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: vertical,\n          horizontal: horizontal\n        },\n        open: open,\n        onClose: this.snackbarClose,\n        ContentProps: {\n          'aria-describedby': 'message-id'\n        },\n        message: React.createElement(\"span\", {\n          id: \"message-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, \"I love snacks\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddQuote;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    quotes: state.quotes.data,\n    loading: state.quotes.loading,\n    error: state.quotes.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(_objectSpread({}, actions.quote), dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AddQuote)));","map":{"version":3,"sources":["/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/src/components/AddQuote.js"],"names":["React","Component","withRouter","connect","bindActionCreators","actions","classNames","withStyles","DialogTitle","DialogActions","Dialog","Button","TextField","Snackbar","REACT_APP_DB_HOST","process","env","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","AddQuote","props","handleClickOpen","setState","open","handleClickClose","snackbarClose","snackbarOpen","state","quote","author","category","addQuote","bind","onFieldChange","name","e","fetch","method","headers","body","JSON","stringify","authorResponse","categoryResponse","json","categoryJson","authorJson","status","_id","quoteResponse","quoteJson","console","log","classes","target","value","handleClose","vertical","horizontal","mapStateToProps","quotes","data","loading","error","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions';\n\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nconst REACT_APP_DB_HOST = process.env.REACT_APP_DB_HOST;\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n});\n\nclass AddQuote extends Component {\n\n    constructor(props) {\n    super(props);\n    \n\t\tthis.state = {\n\t\t\tquote: '',\n\t\t\tauthor: '',\n      category: '',\n      open: false,\n      snackbarOpen: false\n\t\t};\n        this.addQuote = this.addQuote.bind(this);\n        this.onFieldChange = this.onFieldChange.bind(this);\n        this.snackbarClose = this.snackbarClose.bind(this);\n        this.handleClickClose = this.handleClickClose.bind(this);\n    }\n    \n    handleClickOpen = () => {\n      this.setState({\n        open: true,\n      });\n    };\n  \n    handleClickClose = () => {\n      this.setState({\n        open: false,\n      });\n    };\n\n    onFieldChange(name, e) {\n      this.setState({ [name]: e });\n    }\n\n    snackbarClose = () => {\n      this.setState({ snackbarOpen: false });\n    };\n\n    \n\n    async addQuote() {\n        let { quote, author, category } = this.state;\n\n        try {\n            let authorResponse = await fetch(`${REACT_APP_DB_HOST}/api/author`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    name: author\n                })\n            });\n\n            let categoryResponse = await fetch(`${REACT_APP_DB_HOST}/api/category`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    category: category\n                })\n            });\n\n            let categoryJson = await categoryResponse.json();\n            let authorJson = await authorResponse.json();\n\n            if ((authorResponse.status === 200 ||\n                authorResponse.status === 400) &&\n                (categoryResponse.status === 200 ||\n                categoryResponse.status === 400)) {\n                let quoteResponse = await fetch(`${REACT_APP_DB_HOST}/api/quote`, {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        category: categoryJson.category._id,\n                        author: authorJson.author._id,\n                        quote: quote\n                    })\n                });\n                if (quoteResponse.status === 200) {\n                    let quoteJson = await quoteResponse.json();\n                    console.log(\"Quote added: \\\"\" + quoteJson.quote + \"\\\"\");\n                }\n            }\n        } catch (e) {\n            console.log(\"ERROR: \", e);\n        }\n        \n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n        <div>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\n            Add Quote\n          </Button>\n          <Dialog open={this.state.open} onClose={this.handleClickClose} aria-labelledby=\"simple-dialog-title\">\n            <DialogTitle id=\"dialog-title\">Add Quote</DialogTitle>\n            <form className={classes.container} noValidate autoComplete=\"on\">\n              <TextField\n                label=\"Category\"\n                onChange={e => this.onFieldChange('category',  e.target.value)}\n                className={classes.textField}\n                margin=\"normal\"\n                fullWidth\n                variant=\"outlined\"\n              />\n\n              <TextField\n                required\n                label=\"Quote\"\n                multiline\n                onChange={e => this.onFieldChange('quote',  e.target.value)}\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n              />\n\n              <TextField\n                label=\"Author\"\n                onChange={e => this.onFieldChange('author',  e.target.value)}\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n              />\n            </form>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"secondary\" variant=\"contained\">\n                Cancel\n              </Button>\n              <Button onClick={this.addQuote} color=\"primary\" variant=\"contained\">\n                Submit\n              </Button>\n            </DialogActions>\n          </Dialog>\n          <Snackbar\n            anchorOrigin={{ vertical, horizontal }}\n            open={open}\n            onClose={this.snackbarClose}\n            ContentProps={{\n              'aria-describedby': 'message-id',\n            }}\n            message={<span id=\"message-id\">I love snacks</span>}\n          />\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tquotes: state.quotes.data,\n\t\tloading: state.quotes.loading,\n\t\terror: state.quotes.error,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn bindActionCreators({ ...actions.quote }, dispatch);\n};\n\nexport default withRouter(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t)(withStyles(styles)(AddQuote))\n);"]},"metadata":{},"sourceType":"module"}