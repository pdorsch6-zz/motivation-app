{"ast":null,"code":"import _objectSpread from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/src/components/AddQuote.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions';\n\nvar path = require('path');\n\nrequire('dotenv').config({\n  path: path.join(__dirname, '../.env')\n});\n\nvar DB_HOST = process.env.DB_HOST;\nconsole.log(__dirname);\n\nvar AddQuote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddQuote, _Component);\n\n  function AddQuote(props) {\n    var _this;\n\n    _classCallCheck(this, AddQuote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddQuote).call(this, props));\n    _this.state = {\n      quote: '',\n      author: '',\n      category: ''\n    };\n    _this.addQuote = _this.addQuote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFieldChange = _this.onFieldChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddQuote, [{\n    key: \"onFieldChange\",\n    value: function onFieldChange(name, e) {\n      console.log(e);\n      this.setState(_defineProperty({}, name, e));\n    }\n  }, {\n    key: \"addQuote\",\n    value: function () {\n      var _addQuote = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this$state, quote, author, category, authorResponse, categoryResponse, quoteResponse;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$state = this.state, quote = _this$state.quote, author = _this$state.author, category = _this$state.category;\n                _context.prev = 1;\n                _context.next = 4;\n                return fetch(\"\".concat(DB_HOST, \"/api/author\"), {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: {\n                    'name': author\n                  }\n                });\n\n              case 4:\n                authorResponse = _context.sent;\n                _context.next = 7;\n                return fetch(\"\".concat(DB_HOST, \"/api/category\"), {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: {\n                    'category': category\n                  }\n                });\n\n              case 7:\n                categoryResponse = _context.sent;\n\n                if (!((authorResponse.statusCode === 200 || authorResponse.statusCode === 400) && (categoryResponse.statusCode === 200 || categoryResponse.statusCode === 400))) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 11;\n                return fetch(\"\".concat(DB_HOST, \"/api/quote\"), {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: {\n                    category: categoryResponse.body.category._id,\n                    author: authorResponse.body.author._id,\n                    quote: quote\n                  }\n                });\n\n              case 11:\n                quoteResponse = _context.sent;\n                console.log(\"Quote added: \", quoteResponse);\n\n              case 13:\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(\"ERROR: \", _context.t0);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 15]]);\n      }));\n\n      function addQuote() {\n        return _addQuote.apply(this, arguments);\n      }\n\n      return addQuote;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, \"Category:\", React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.onFieldChange('category', e.target.value);\n        },\n        placeholder: \"Category\",\n        style: {\n          width: \"200px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), \"Quote:\", React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.onFieldChange('quote', e.target.value);\n        },\n        placeholder: \"Quote\",\n        style: {\n          width: \"200px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), \"Author:\", React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.onFieldChange('author', e.target.value);\n        },\n        placeholder: \"Author\",\n        style: {\n          width: \"200px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addQuote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"ADD\"));\n    }\n  }]);\n\n  return AddQuote;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    quotes: state.quotes.data,\n    loading: state.quotes.loading,\n    error: state.quotes.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(_objectSpread({}, actions.quote), dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddQuote));","map":{"version":3,"sources":["/Users/pauldorsch/Documents/PaulsCode/Motivation App/motivation-app/frontend/src/components/AddQuote.js"],"names":["React","Component","withRouter","connect","bindActionCreators","actions","path","require","config","join","__dirname","DB_HOST","process","env","console","log","AddQuote","props","state","quote","author","category","addQuote","bind","onFieldChange","name","e","setState","fetch","method","headers","body","authorResponse","categoryResponse","statusCode","_id","quoteResponse","target","value","width","mapStateToProps","quotes","data","loading","error","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions';\nconst path = require('path');\n\n\nrequire('dotenv').config({ path: path.join(__dirname, '../.env') });\n\nconst DB_HOST = process.env.DB_HOST;\nconsole.log(__dirname);\n\nclass AddQuote extends Component {\n\n    constructor(props) {\n    super(props);\n    \n\t\tthis.state = {\n\t\t\tquote: '',\n\t\t\tauthor: '',\n\t\t\tcategory: ''\n\t\t};\n        this.addQuote = this.addQuote.bind(this);\n        this.onFieldChange = this.onFieldChange.bind(this);\n\t  }\n\n    onFieldChange(name, e) {\n      console.log(e);\n      this.setState({ [name]: e });\n    }\n\n    async addQuote() {\n        let { quote, author, category } = this.state;\n\n        try {\n            let authorResponse = await fetch(`${DB_HOST}/api/author`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: {\n                    'name': author\n                }\n            });\n\n            let categoryResponse = await fetch(`${DB_HOST}/api/category`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: {\n                    'category': category\n                }\n            });\n\n            if ((authorResponse.statusCode === 200 ||\n                authorResponse.statusCode === 400) &&\n                (categoryResponse.statusCode === 200 ||\n                categoryResponse.statusCode === 400)) {\n                let quoteResponse = await fetch(`${DB_HOST}/api/quote`, {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json',\n                    },\n                    body: {\n                        category: categoryResponse.body.category._id,\n                        author: authorResponse.body.author._id,\n                        quote: quote\n                    }\n                });\n                console.log(\"Quote added: \", quoteResponse);\n            }\n        } catch (e) {\n            console.log(\"ERROR: \", e);\n        }\n        \n    }\n\n    render() {\n        return (\n        <>\n          Category:\n          <input\n            type=\"text\"\n            onChange={e => this.onFieldChange('category',  e.target.value)}\n            placeholder=\"Category\"\n            style={{ width: \"200px\" }}\n          />\n          <br />\n          Quote: \n          <input\n            type=\"text\"\n            onChange={e => this.onFieldChange('quote',  e.target.value)}\n            placeholder=\"Quote\"\n            style={{ width: \"200px\" }}\n          />\n          <br />\n          Author:\n          <input\n            type=\"text\"\n            onChange={e => this.onFieldChange('author',  e.target.value)}\n            placeholder=\"Author\"\n            style={{ width: \"200px\" }}\n          />\n          <br />\n          <button onClick={this.addQuote}>\n            ADD\n          </button>\n        </>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tquotes: state.quotes.data,\n\t\tloading: state.quotes.loading,\n\t\terror: state.quotes.error,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn bindActionCreators({ ...actions.quote }, dispatch);\n};\n\nexport default withRouter(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t)(AddQuote)\n);"]},"metadata":{},"sourceType":"module"}