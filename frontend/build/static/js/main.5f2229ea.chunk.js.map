{"version":3,"sources":["actions/quotes.js","actions/quote.js","actionTypes.js","actions/index.js","serviceWorker.js","reducers/quotes.js","reducers/index.js","store/store.js","components/CustomSnackbar.js","components/AddQuote.js","components/QuoteRow.js","components/QuoteTable.js","components/Quotes.js","index.js"],"names":["loadQuotesSuccess","quotes","type","actionTypes","loadQuotesError","error","loadQuotesLoading","loadQuotes","_ref","Object","_Users_pauldorsch_Documents_PaulsCode_Motivation_App_motivation_app_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_pauldorsch_Documents_PaulsCode_Motivation_App_motivation_app_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","dispatch","settings","response","json","wrap","_context","prev","next","method","mode","headers","Content-Type","fetch","sent","ok","abrupt","message","t0","stop","_x","apply","this","arguments","loadQuoteSuccess","quote","loadQuoteError","loadQuoteLoading","loadQuote","id","url","concat","__webpack_require__","d","__webpack_exports__","LOAD_QUOTE","LOAD_QUOTE_SUCCESS","LOAD_QUOTE_ERROR","LOAD_QUOTES","LOAD_QUOTES_SUCCESS","LOAD_QUOTES_ERROR","module","exports","require","Boolean","window","location","hostname","match","initialState","selectedQuote","loading","combineReducers","state","length","undefined","action","objectSpread","data","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","withStyles","theme","backgroundColor","green","palette","dark","primary","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","display","alignItems","props","classes","className","onClose","variant","other","objectWithoutProperties","Icon","react_default","createElement","SnackbarContent_default","assign","classNames","aria-describedby","IconButton_default","key","aria-label","color","close","onClick","Close_default","AddQuote","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClickOpen","setState","open","handleClickClose","closeSnackbar","snackbarOpen","openSnackbar","snackbarStyle","snackbarMessage","updateQuotes","quotesActions","author","category","addQuote","bind","assertThisInitialized","onFieldChange","name","e","defineProperty","process","body","JSON","stringify","authorResponse","categoryResponse","categoryJson","authorJson","status","_id","_this2","_this$state2","Button_default","Dialog_default","aria-labelledby","DialogTitle_default","container","noValidate","autoComplete","TextField_default","label","onChange","target","value","textField","margin","fullWidth","required","multiline","DialogActions_default","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","CustomSnackbar","Component","withRouter","connect","bindActionCreators","actions","quoteActions","flexWrap","marginLeft","CustomTableCell","head","common","black","white","TableCell","QuoteRow","TableRow_default","component","scope","align","root","width","marginTop","overflowX","table","minWidth","row","&:nth-of-type(odd)","background","default","QuoteTable","Paper_default","Table_default","TableHead_default","QuoteTable_CustomTableCell","TableBody_default","map","index","components_QuoteRow","Quotes","_this$props","_this$props2","Fragment","components_AddQuote","components_QuoteTable","ReactDOM","render","es","store","BrowserRouter","Route","path","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qNAEMA,EAAoB,SAAAC,GACzB,MAAO,CACNC,KAAMC,IACNF,WAIIG,EAAkB,SAAAC,GACvB,MAAO,CACNH,KAAMC,IACNE,UAIIC,EAAoB,WACzB,MAAO,CACNJ,KAAMC,MAGD,SAASI,IACf,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACNP,EAAST,KADH,iBAGFU,EAAW,CACdO,OAAQ,MACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,qBAPbN,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAWyBK,MAXzB,iBAWoCX,GAXpC,cAWQC,EAXRG,EAAAQ,KAAAR,EAAAE,KAAA,EAYqBL,EAASC,OAZ9B,UAYQA,EAZRE,EAAAQ,KAcDX,EAASY,GAdR,CAAAT,EAAAE,KAAA,gBAAAF,EAAAU,OAAA,SAeIf,EAASX,EAAgBc,EAAKa,WAflC,eAAAX,EAAAU,OAAA,SAiBEf,EAASf,EAAkBkB,EAAKjB,UAjBlC,eAAAmB,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAAAA,EAAAU,OAAA,SAmBEf,EAASX,EAAegB,EAAAY,MAnB1B,yBAAAZ,EAAAa,SAAAnB,EAAA,kBAAP,gBAAAoB,GAAA,OAAA1B,EAAA2B,MAAAC,KAAAC,YAAA,0HCpBKC,EAAmB,SAAAC,GACxB,MAAO,CACNrC,KAAMC,IACNoC,UAIIC,EAAiB,SAAAnC,GACtB,MAAO,CACNH,KAAMC,IACNE,UAIIoC,EAAmB,WACxB,MAAO,CACNvC,KAAMC,MAID,SAASuC,EAAUC,GACzB,sBAAAnC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAOC,GAAP,IAAA6B,EAAA5B,EAAAC,EAAA,OAAAN,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACNP,EAAS0B,KACLG,EAFE,cAAAC,OAEkBF,GACpB3B,EAAW,CACdO,OAAQ,MACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,qBAPbN,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAWgBK,MAAMiB,EAAK5B,GAAUE,OAXrC,WAWDD,EAXCG,EAAAQ,MAaQC,GAbR,CAAAT,EAAAE,KAAA,eAAAF,EAAAU,OAAA,SAcIf,EAASyB,EAAevB,EAASc,WAdrC,cAAAX,EAAAU,OAAA,SAiBEf,EAASuB,EAAiBrB,EAASsB,SAjBrC,eAAAnB,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAAAA,EAAAU,OAAA,SAmBEf,EAASyB,EAAcpB,EAAAY,MAnBzB,yBAAAZ,EAAAa,SAAAnB,EAAA,kBAAP,gBAAAoB,GAAA,OAAA1B,EAAA2B,MAAAC,KAAAC,YAAA,qCCvBDS,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IACO,IAAML,EAAa,aACbC,EAAqB,qBACrBC,EAAmB,mBAGnBC,EAAc,cACdC,EAAsB,sBACtBC,EAAoB,wCCPjCC,EAAOC,QAAQvD,OAASwD,EAAQ,KAEhCF,EAAOC,QAAQjB,MAAQkB,EAAQ,qGCSXC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+FCVAC,EAAe,CACjBC,cAAe,KACf/D,OAAQ,KACXgE,SAAS,EACT5D,MAAO,MCTO6D,kBAAgB,CAAE3B,MDY1B,WAA6C,IAA9B4B,EAA8B9B,UAAA+B,OAAA,QAAAC,IAAAhC,UAAA,GAAAA,UAAA,GAAtB0B,EAAcO,EAAQjC,UAAA+B,OAAA,EAAA/B,UAAA,QAAAgC,EACnD,OAAQC,EAAOpE,MACd,KAAK+C,IACJ,OAAOxC,OAAA8D,EAAA,EAAA9D,CAAA,GACH0D,EADJ,CAECF,SAAS,IAGX,KAAKf,IACJ,OAAOzC,OAAA8D,EAAA,EAAA9D,CAAA,GACH0D,EADJ,CAECF,SAAS,EACTD,cAAeM,EAAO/B,MACtBlC,MAAO,OAGT,KAAK8C,IACJ,OAAO1C,OAAA8D,EAAA,EAAA9D,CAAA,GACH0D,EADJ,CAECF,SAAS,EACT5D,MAAOiE,EAAOjE,QAGhB,QACC,OAAO8D,ICpC8BlE,ODwCjC,WAA8C,IAA9BkE,EAA8B9B,UAAA+B,OAAA,QAAAC,IAAAhC,UAAA,GAAAA,UAAA,GAAtB0B,EAAcO,EAAQjC,UAAA+B,OAAA,EAAA/B,UAAA,QAAAgC,EACpD,OAAQC,EAAOpE,MACd,KAAKkD,IACJ,OAAO3C,OAAA8D,EAAA,EAAA9D,CAAA,GACH0D,EADJ,CAECF,SAAS,IAGX,KAAKZ,IACJ,OAAO5C,OAAA8D,EAAA,EAAA9D,CAAA,GACH0D,EADJ,CAECF,SAAS,EACTO,KAAMF,EAAOrE,OACbI,MAAO,OAGT,KAAKiD,IACJ,OAAO7C,OAAA8D,EAAA,EAAA9D,CAAA,GACH0D,EADJ,CAECF,SAAS,EACT5D,MAAOiE,EAAOjE,QAGhB,QACC,OAAO8D,eE9DJM,EAAmBd,OAAOe,sCAAwCC,IACzDC,cAAYC,EAAmCJ,EAC1DK,YAAgBC,oaCOdC,GAAc,CAChBC,QAASC,IACTC,QAASC,KACT/E,MAAOgF,IACPC,KAAMC,KAmEOC,4BAhEC,SAAAC,GAAK,MAAK,CACxBR,QAAS,CACPS,gBAAiBC,KAAM,MAEzBtF,MAAO,CACLqF,gBAAiBD,EAAMG,QAAQvF,MAAMwF,MAEvCP,KAAM,CACJI,gBAAiBD,EAAMG,QAAQE,QAAQD,MAEzCV,QAAS,CACPO,gBAAiBK,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAaX,EAAMY,QAAQC,MAE7BvE,QAAS,CACPwE,QAAS,OACTC,WAAY,YA0CDhB,CAtCf,SAA2BiB,GAAO,IACxBC,EAA4DD,EAA5DC,QAASC,EAAmDF,EAAnDE,UAAW5E,EAAwC0E,EAAxC1E,QAAS6E,EAA+BH,EAA/BG,QAASC,EAAsBJ,EAAtBI,QAAYC,EAD1BrG,OAAAsG,EAAA,EAAAtG,CACoCgG,EADpC,uDAE1BO,EAAOhC,GAAY6B,GAEzB,OACEI,EAAArG,EAAAsG,cAACC,GAAAvG,EAADH,OAAA2G,OAAA,CACET,UAAWU,IAAWX,EAAQG,GAAUF,GACxCW,mBAAiB,kBACjBvF,QACEkF,EAAArG,EAAAsG,cAAA,QAAMvE,GAAG,kBAAkBgE,UAAWD,EAAQ3E,SAC5CkF,EAAArG,EAAAsG,cAACF,EAAD,CAAML,UAAWU,IAAWX,EAAQV,KAAMU,EAAQR,eACjDnE,GAGLuC,OAAQ,CACN2C,EAAArG,EAAAsG,cAACK,GAAA3G,EAAD,CACE4G,IAAI,QACJC,aAAW,QACXC,MAAM,UACNf,UAAWD,EAAQiB,MACnBC,QAAShB,GAETK,EAAArG,EAAAsG,cAACW,EAAAjH,EAAD,CAAW+F,UAAWD,EAAQV,UAG9Bc,MC5CNgB,eAEF,SAAAA,EAAYrB,GAAO,IAAAsB,EAAA,OAAAtH,OAAAuH,EAAA,EAAAvH,CAAA2B,KAAA0F,IACnBC,EAAAtH,OAAAwH,EAAA,EAAAxH,CAAA2B,KAAA3B,OAAAyH,EAAA,EAAAzH,CAAAqH,GAAAK,KAAA/F,KAAMqE,KAkBN2B,gBAAkB,WAChBL,EAAKM,SAAS,CACZC,MAAM,KArBSP,EAyBnBQ,iBAAmB,WACjBR,EAAKM,SAAS,CACZC,MAAM,KA3BSP,EAmCnBS,cAAgB,WACdT,EAAKM,SAAS,CAAEI,cAAc,KApCbV,EAuCnBW,aAAe,SAAC7B,EAAS9E,GACvBgG,EAAKM,SAAS,CAAEI,cAAc,EAAME,cAAe9B,EAAS+B,gBAAiB7G,KAxC5DgG,EA2CnBc,aAAe,YAEbtI,EADuBwH,EAAKtB,MAAMqC,cAA1BvI,eAzCZwH,EAAK5D,MAAQ,CACZ5B,MAAO,GACPwG,OAAQ,GACLC,SAAU,GACVV,MAAM,EACNG,cAAc,EACdE,cAAe,UACfC,gBAAiB,IAEfb,EAAKkB,SAAWlB,EAAKkB,SAASC,KAAdzI,OAAA0I,EAAA,EAAA1I,QAAA0I,EAAA,EAAA1I,CAAAsH,KAChBA,EAAKqB,cAAgBrB,EAAKqB,cAAcF,KAAnBzI,OAAA0I,EAAA,EAAA1I,QAAA0I,EAAA,EAAA1I,CAAAsH,KACrBA,EAAKS,cAAgBT,EAAKS,cAAcU,KAAnBzI,OAAA0I,EAAA,EAAA1I,QAAA0I,EAAA,EAAA1I,CAAAsH,KACrBA,EAAKW,aAAeX,EAAKW,aAAaQ,KAAlBzI,OAAA0I,EAAA,EAAA1I,QAAA0I,EAAA,EAAA1I,CAAAsH,KACpBA,EAAKQ,iBAAmBR,EAAKQ,iBAAiBW,KAAtBzI,OAAA0I,EAAA,EAAA1I,QAAA0I,EAAA,EAAA1I,CAAAsH,KAhBTA,6EA+BLsB,EAAMC,GAClBlH,KAAKiG,SAAL5H,OAAA8I,EAAA,EAAA9I,CAAA,GAAiB4I,EAAOC,4KAmBYlH,KAAK+B,MAAjC5B,UAAOwG,WAAQC,aAErB5G,KAAKmG,qCAG0B5G,MAAK,GAAAkB,OAvElB2G,wBAuEkB,eAAoC,CAChEjI,OAAQ,OACRE,QAAS,CACPC,eAAgB,oBAElB+H,KAAMC,KAAKC,UAAU,CACjBN,KAAMN,oBANVa,kBAUyBjI,MAAK,GAAAkB,OAjFpB2G,wBAiFoB,iBAAsC,CACpEjI,OAAQ,OACRE,QAAS,CACPC,eAAgB,oBAElB+H,KAAMC,KAAKC,UAAU,CACjBX,SAAUA,oBANda,mBAUqBA,EAAiB3I,sBAAtC4I,mBACmBF,EAAe1I,kBAAlC6I,SAE2B,MAA1BH,EAAeI,QACU,MAA1BJ,EAAeI,QACc,MAA5BH,EAAiBG,QACU,MAA5BH,EAAiBG,yCACSrI,MAAK,GAAAkB,OAlGrB2G,wBAkGqB,cAAmC,CAC9DjI,OAAQ,OACRE,QAAS,CACPC,eAAgB,oBAElB+H,KAAMC,KAAKC,UAAU,CACjBX,SAAUc,EAAad,SAASiB,IAChClB,OAAQgB,EAAWhB,OAAOkB,IAC1B1H,MAAOA,cAGc,aAAXyH,SAChB5H,KAAKyG,eACLzG,KAAKsG,aAAa,UAAW,2EAIrCtG,KAAKsG,aAAa,QAAS,UAAAtH,EAAAY,iJAKxB,IAAAkI,EAAA9H,KACGsE,EAAYtE,KAAKqE,MAAjBC,QADHyD,EAEoD/H,KAAK+B,MAAtDyE,EAFHuB,EAEGvB,gBAAiBD,EAFpBwB,EAEoBxB,cAAeF,EAFnC0B,EAEmC1B,aACxC,OACAxB,EAAArG,EAAAsG,cAAA,WACED,EAAArG,EAAAsG,cAACkD,EAAAxJ,EAAD,CAAQiG,QAAQ,YAAYa,MAAM,UAAUE,QAASxF,KAAKgG,iBAA1D,aAGAnB,EAAArG,EAAAsG,cAACmD,EAAAzJ,EAAD,CAAQ0H,KAAMlG,KAAK+B,MAAMmE,KAAM1B,QAASxE,KAAKmG,iBAAkB+B,kBAAgB,uBAC7ErD,EAAArG,EAAAsG,cAACqD,EAAA3J,EAAD,CAAa+B,GAAG,gBAAhB,aACAsE,EAAArG,EAAAsG,cAAA,QAAMP,UAAWD,EAAQ8D,UAAWC,YAAU,EAACC,aAAa,MAC1DzD,EAAArG,EAAAsG,cAACyD,EAAA/J,EAAD,CACEgK,MAAM,WACNC,SAAU,SAAAvB,GAAC,OAAIY,EAAKd,cAAc,WAAaE,EAAEwB,OAAOC,QACxDpE,UAAWD,EAAQsE,UACnBC,OAAO,SACPC,WAAS,EACTrE,QAAQ,aAGVI,EAAArG,EAAAsG,cAACyD,EAAA/J,EAAD,CACEuK,UAAQ,EACRP,MAAM,QACNQ,WAAS,EACTP,SAAU,SAAAvB,GAAC,OAAIY,EAAKd,cAAc,QAAUE,EAAEwB,OAAOC,QACrDpE,UAAWD,EAAQsE,UACnBC,OAAO,SACPpE,QAAQ,WACRqE,WAAS,IAGXjE,EAAArG,EAAAsG,cAACyD,EAAA/J,EAAD,CACEgK,MAAM,SACNC,SAAU,SAAAvB,GAAC,OAAIY,EAAKd,cAAc,SAAWE,EAAEwB,OAAOC,QACtDpE,UAAWD,EAAQsE,UACnBC,OAAO,SACPpE,QAAQ,WACRqE,WAAS,KAGbjE,EAAArG,EAAAsG,cAACmE,EAAAzK,EAAD,KACEqG,EAAArG,EAAAsG,cAACkD,EAAAxJ,EAAD,CAAQgH,QAASxF,KAAKmG,iBAAkBb,MAAM,YAAYb,QAAQ,aAAlE,UAGAI,EAAArG,EAAAsG,cAACkD,EAAAxJ,EAAD,CAAQgH,QAASxF,KAAK6G,SAAUvB,MAAM,UAAUb,QAAQ,aAAxD,YAKJI,EAAArG,EAAAsG,cAACoE,EAAA1K,EAAD,CACE2K,aAAc,CACZC,SAAU,MACVC,WAAY,UAEdnD,KAAMG,EACNiD,iBAAkB,IAClB9E,QAASxE,KAAKoG,eAEZvB,EAAArG,EAAAsG,cAACyE,GAAD,CACE/E,QAASxE,KAAKoG,cACd3B,QAAS8B,EACT5G,QAAS6G,aAxKFgD,aA+LRC,eACdC,YAhBuB,SAAA3H,GACvB,MAAO,CACNlE,OAAQkE,EAAMlE,OAAOuE,KACrBP,QAASE,EAAMlE,OAAOgE,QACtB5D,MAAO8D,EAAMlE,OAAOI,QAIK,SAAAU,GAC1B,MAAO,CACJ+H,cAAeiD,YAAmBtL,OAAA8D,EAAA,EAAA9D,CAAA,GAAKuL,UAAkBjL,GACzDkL,aAAcF,YAAmBtL,OAAA8D,EAAA,EAAA9D,CAAA,GAAKuL,SAAiBjL,KAK1D+K,CAGEtG,qBA9MY,SAAAC,GAAK,MAAK,CACvB+E,UAAW,CACTjE,QAAS,OACT2F,SAAU,QAEZlB,UAAW,CACTmB,WAAY1G,EAAMY,QAAQC,KAC1BF,YAAaX,EAAMY,QAAQC,QAuM5Bd,CAAmBsC,8CCtNhBsE,GAAkB5G,qBAAW,SAAAC,GAAK,MAAK,CACzC4G,KAAM,CACJ3G,gBAAiBD,EAAMG,QAAQ0G,OAAOC,MACtC7E,MAAOjC,EAAMG,QAAQ0G,OAAOE,OAE9B/C,KAAM,CACJxD,SAAU,MANQT,CAQlBiH,MAkBAC,oLAIE,IAAInK,EAAQH,KAAKqE,MAAMlE,MACvB,OACI0E,EAAArG,EAAAsG,cAACyF,GAAA/L,EAAD,CAAU4G,IAAKjF,EAAM0H,KACjBhD,EAAArG,EAAAsG,cAACkF,GAAD,CAAiBQ,UAAU,KAAKC,MAAM,OACjCtK,EAAMA,OAEX0E,EAAArG,EAAAsG,cAACkF,GAAD,CAAiBU,MAAM,SAASvK,EAAMwG,OAASxG,EAAMwG,OAAOM,KAAO,OACnEpC,EAAArG,EAAAsG,cAACkF,GAAD,CAAiBU,MAAM,SAASvK,EAAMyG,SAAWzG,EAAMyG,SAASA,SAAW,eAXpE4C,aA6BRC,eACdC,YAbuB,SAAA3H,GACvB,MAAO,CACNlE,OAAQkE,EAAMlE,OAAOuE,KACrBP,QAASE,EAAMlE,OAAOgE,QACtB5D,MAAO8D,EAAMlE,OAAOI,QAIK,SAAAU,GAC1B,OAAOgL,YAAmBtL,OAAA8D,EAAA,EAAA9D,CAAA,GAAKuL,UAAkBjL,IAIjD+K,CAGEtG,qBAjDc,SAAAC,GAAK,MAAK,CACvBsH,KAAM,CACJC,MAAO,OACPC,UAAgC,EAArBxH,EAAMY,QAAQC,KACzB4G,UAAW,QAEbC,MAAO,CACLC,SAAU,KAEZC,IAAK,CACHC,qBAAsB,CACpB5H,gBAAiBD,EAAMG,QAAQ2H,WAAWC,YAsC/ChI,CAAmBkH,yFCrDhBN,GAAkB5G,qBAAW,SAAAC,GAAK,MAAK,CACzC4G,KAAM,CACJ3G,gBAAiBD,EAAMG,QAAQ0G,OAAOC,MACtC7E,MAAOjC,EAAMG,QAAQ0G,OAAOE,OAE9B/C,KAAM,CACJxD,SAAU,MANQT,CAQlBiH,MAkBAgB,oLAGE,IAAIxN,EAASmC,KAAKqE,MAAMxG,OACxB,OACIgH,EAAArG,EAAAsG,cAACwG,GAAA9M,EAAD,KACAqG,EAAArG,EAAAsG,cAACyG,GAAA/M,EAAD,KACIqG,EAAArG,EAAAsG,cAAC0G,GAAAhN,EAAD,KACAqG,EAAArG,EAAAsG,cAACyF,GAAA/L,EAAD,KACIqG,EAAArG,EAAAsG,cAAC2G,GAAD,cACA5G,EAAArG,EAAAsG,cAAC2G,GAAD,CAAiBf,MAAM,SAAvB,UACA7F,EAAArG,EAAAsG,cAAC2G,GAAD,CAAiBf,MAAM,SAAvB,cAGJ7F,EAAArG,EAAAsG,cAAC4G,GAAAlN,EAAD,KACKX,EAAO8N,IAAI,SAACxL,EAAOyL,GAAR,OAAkB/G,EAAArG,EAAAsG,cAAC+G,GAAD,CAAU1L,MAAOA,EAAOiF,IAAKwG,gBAftDpC,aAmCVC,eACdC,YAbuB,SAAA3H,GACvB,MAAO,CACNlE,OAAQkE,EAAMlE,OAAOuE,KACrBP,QAASE,EAAMlE,OAAOgE,QACtB5D,MAAO8D,EAAMlE,OAAOI,QAIK,SAAAU,GAC1B,OAAOgL,YAAmBtL,OAAA8D,EAAA,EAAA9D,CAAA,GAAKuL,UAAkBjL,IAIjD+K,CAGEtG,qBAvDc,SAAAC,GAAK,MAAK,CACvBsH,KAAM,CACJC,MAAO,OACPC,UAAgC,EAArBxH,EAAMY,QAAQC,KACzB4G,UAAW,QAEbC,MAAO,CACLC,SAAU,KAEZC,IAAK,CACHC,qBAAsB,CACpB5H,gBAAiBD,EAAMG,QAAQ2H,WAAWC,YA4C/ChI,CAAmBiI,MCvEhBS,eAEF,SAAAA,EAAYzH,GAAQ,OAAAhG,OAAAuH,EAAA,EAAAvH,CAAA2B,KAAA8L,GAAAzN,OAAAwH,EAAA,EAAAxH,CAAA2B,KAAA3B,OAAAyH,EAAA,EAAAzH,CAAAyN,GAAA/F,KAAA/F,KACZqE,sFAGa,IAAA0H,EACY/L,KAAKqE,MAA5BxG,EADWkO,EACXlO,OAAQM,EADG4N,EACH5N,WACXN,GACHM,qCAKK,IAAA6N,EAC4BhM,KAAKqE,MAAhCxG,EADDmO,EACCnO,OAAiBI,GADlB+N,EACSnK,QADTmK,EACkB/N,OACzB,OAAIA,EAEA4G,EAAArG,EAAAsG,cAAAD,EAAArG,EAAAyN,SAAA,KACEpH,EAAArG,EAAAsG,cAAA,aAAK7G,EAAL,MAKJ4G,EAAArG,EAAAsG,cAAAD,EAAArG,EAAAyN,SAAA,KACEpH,EAAArG,EAAAsG,cAAA,WACED,EAAArG,EAAAsG,cAACoH,GAAD,OAEFrH,EAAArG,EAAAsG,cAAA,WACAD,EAAArG,EAAAsG,cAAA,WACGjH,EACCgH,EAAArG,EAAAsG,cAACqH,GAAD,MAEEtH,EAAArG,EAAAsG,cAAA,wBAGND,EAAArG,EAAAsG,cAAA,mBApCW0E,aAsDNC,eACdC,YAbuB,SAAA3H,GACvB,MAAO,CACNlE,OAAQkE,EAAMlE,OAAOuE,KACrBP,QAASE,EAAMlE,OAAOgE,QACtB5D,MAAO8D,EAAMlE,OAAOI,QAIK,SAAAU,GAC1B,OAAOgL,YAAmBtL,OAAA8D,EAAA,EAAA9D,CAAA,GAAKuL,UAAkBjL,IAIjD+K,CAGEoC,KCxDHM,IAASC,OACPxH,EAAArG,EAAAsG,cAACwH,EAAA,EAAD,CAAUC,MAAOA,GACjB1H,EAAArG,EAAAsG,cAAC0H,EAAA,EAAD,KACE3H,EAAArG,EAAAsG,cAAC2H,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACnC,UAAWsB,OAGnCc,SAASC,eAAe,STgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5f2229ea.chunk.js","sourcesContent":["import * as actionTypes from '../actionTypes';\n\nconst loadQuotesSuccess = quotes => {\n\treturn {\n\t\ttype: actionTypes.LOAD_QUOTES_SUCCESS,\n\t\tquotes,\n\t};\n};\n\nconst loadQuotesError = error => {\n\treturn {\n\t\ttype: actionTypes.LOAD_QUOTES_ERROR,\n\t\terror,\n\t};\n};\n\nconst loadQuotesLoading = () => {\n\treturn {\n\t\ttype: actionTypes.LOAD_QUOTES,\n\t};\n};\nexport function loadQuotes() {\n\treturn async (dispatch) => {\n\t\tdispatch(loadQuotesLoading());\n\t\tlet url = `/api/quote/all`;\n\t\tlet settings = {\n\t\t\tmethod: 'GET',\n\t\t\tmode: 'cors',\n\t\t\theaders: {\n\t\t\t  'Content-Type': 'application/json',\n\t\t\t},\n\t\t  };\n\t\t  try {\n            let response = await fetch(url, settings);\n            let json = await response.json();\n\t\t\n\t\t\tif(!response.ok) {\n\t\t\t  return dispatch(loadQuotesError(json.message));\n\t\t\t}\n\t\t\treturn dispatch(loadQuotesSuccess(json.quotes));\n\t\t  } catch (err) {\n\t\t\treturn dispatch(loadQuotesError(err));\n\t\t  }\t\n\n\t}\n}","import * as actionTypes from '../actionTypes';\n\nconst loadQuoteSuccess = quote => {\n\treturn {\n\t\ttype: actionTypes.LOAD_QUOTE_SUCCESS,\n\t\tquote,\n\t};\n};\n\nconst loadQuoteError = error => {\n\treturn {\n\t\ttype: actionTypes.LOAD_QUOTE_ERROR,\n\t\terror,\n\t};\n};\n\nconst loadQuoteLoading = () => {\n\treturn {\n\t\ttype: actionTypes.LOAD_QUOTE,\n\t};\n};\n\nexport function loadQuote(id) {\n\treturn async (dispatch) => {\n\t\tdispatch(loadQuoteLoading());\n\t\tlet url = `/api/quote/${id}`;\n\t\tlet settings = {\n\t\t\tmethod: 'GET',\n\t\t\tmode: 'cors',\n\t\t\theaders: {\n\t\t\t  'Content-Type': 'application/json',\n\t\t\t},\n\t\t  };\n\t\t  try {\n\t\t\tlet response = await fetch(url, settings).json();\n\t\t\n\t\t\tif(!response.ok) {\n\t\t\t  return dispatch(loadQuoteError(response.message));\n\t\t\t}\n\t\t\n\t\t\treturn dispatch(loadQuoteSuccess(response.quote));\n\t\t  } catch (err) {\n\t\t\treturn dispatch(loadQuoteError(err));\n\t\t  }\t\n\n\t}\n}","/** Quote types */\nexport const LOAD_QUOTE = 'LOAD_QUOTE';\nexport const LOAD_QUOTE_SUCCESS = 'LOAD_QUOTE_SUCCESS';\nexport const LOAD_QUOTE_ERROR = 'LOAD_QUOTE_ERROR';\n\n/** Quotes types */\nexport const LOAD_QUOTES = 'LOAD_QUOTES';\nexport const LOAD_QUOTES_SUCCESS = 'LOAD_QUOTES_SUCCESS';\nexport const LOAD_QUOTES_ERROR = 'LOAD_QUOTES_ERROR';","// import *  as quotes from \"./quotes\";\nmodule.exports.quotes = require('./quotes');\n\nmodule.exports.quote = require('./quote');\n\n\n// import *  as quote from \"./quote\";\n// module.exports.quote = quote;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { \n    LOAD_QUOTE,\n    LOAD_QUOTE_ERROR,\n    LOAD_QUOTE_SUCCESS,\n    LOAD_QUOTES,\n    LOAD_QUOTES_ERROR,\n    LOAD_QUOTES_SUCCESS } from '../actionTypes';\n\nconst initialState = {\n    selectedQuote: null,\n    quotes: null,\n\tloading: true,\n\terror: null,\n};\n\nexport function quote(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase LOAD_QUOTE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\n\t\tcase LOAD_QUOTE_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tselectedQuote: action.quote,\n\t\t\t\terror: null,\n\t\t\t};\n\n\t\tcase LOAD_QUOTE_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.error,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport function quotes(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase LOAD_QUOTES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\n\t\tcase LOAD_QUOTES_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tdata: action.quotes,\n\t\t\t\terror: null,\n\t\t\t};\n\n\t\tcase LOAD_QUOTES_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.error,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import { combineReducers } from \"redux\";\nimport { quote, quotes } from \"./quotes\";\n\nexport default combineReducers({ quote, quotes });","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers\";\n\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default createStore(rootReducer, /* preloadedState, */ composeEnhancers(\n    applyMiddleware(thunk)\n  ));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n  };\n  \n  const styles1 = theme => ({\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n    icon: {\n      fontSize: 20,\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing.unit,\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n  });\n  \n  function MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n  \n    return (\n      <SnackbarContent\n        className={classNames(classes[variant], className)}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={classNames(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={onClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    );\n  }\n  \n  MySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n  };\n  \n  export default withStyles(styles1)(MySnackbarContent);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CustomSnackbar from './CustomSnackbar';\n\nconst REACT_APP_DB_HOST = process.env.REACT_APP_DB_HOST;\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n});\n\nclass AddQuote extends Component {\n\n    constructor(props) {\n    super(props);\n    \n\t\tthis.state = {\n\t\t\tquote: '',\n\t\t\tauthor: '',\n      category: '',\n      open: false,\n      snackbarOpen: false,\n      snackbarStyle: 'success',\n      snackbarMessage: ''\n\t\t};\n        this.addQuote = this.addQuote.bind(this);\n        this.onFieldChange = this.onFieldChange.bind(this);\n        this.closeSnackbar = this.closeSnackbar.bind(this);\n        this.openSnackbar = this.openSnackbar.bind(this);\n        this.handleClickClose = this.handleClickClose.bind(this);\n    }\n    \n    handleClickOpen = () => {\n      this.setState({\n        open: true,\n      });\n    };\n  \n    handleClickClose = () => {\n      this.setState({\n        open: false,\n      });\n    };\n\n    onFieldChange(name, e) {\n      this.setState({ [name]: e });\n    }\n\n    closeSnackbar = () => {\n      this.setState({ snackbarOpen: false });\n    };\n\n    openSnackbar = (variant, message) => {\n      this.setState({ snackbarOpen: true, snackbarStyle: variant, snackbarMessage: message });\n    };\n\n    updateQuotes = () => {\n      const { loadQuotes } = this.props.quotesActions; \n      loadQuotes();\n    }\n\n    \n\n    async addQuote() {\n        let { quote, author, category } = this.state;\n\n        this.handleClickClose();\n\n        try {\n            let authorResponse = await fetch(`${REACT_APP_DB_HOST}/api/author`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    name: author\n                })\n            });\n\n            let categoryResponse = await fetch(`${REACT_APP_DB_HOST}/api/category`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    category: category\n                })\n            });\n\n            let categoryJson = await categoryResponse.json();\n            let authorJson = await authorResponse.json();\n\n            if ((authorResponse.status === 200 ||\n                authorResponse.status === 400) &&\n                (categoryResponse.status === 200 ||\n                categoryResponse.status === 400)) {\n                let quoteResponse = await fetch(`${REACT_APP_DB_HOST}/api/quote`, {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        category: categoryJson.category._id,\n                        author: authorJson.author._id,\n                        quote: quote\n                    })\n                });\n                if (quoteResponse.status === 200) {\n                  this.updateQuotes();\n                  this.openSnackbar('success', \"Quote added!\" );\n                }\n            }\n        } catch (e) {\n          this.openSnackbar('error', \"Error: \" + e );\n        }\n        \n    }\n\n    render() {\n        const { classes } = this.props;\n        const { snackbarMessage, snackbarStyle, snackbarOpen } = this.state;\n        return (\n        <div>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\n            Add Quote\n          </Button>\n          <Dialog open={this.state.open} onClose={this.handleClickClose} aria-labelledby=\"simple-dialog-title\">\n            <DialogTitle id=\"dialog-title\">Add Quote</DialogTitle>\n            <form className={classes.container} noValidate autoComplete=\"on\">\n              <TextField\n                label=\"Category\"\n                onChange={e => this.onFieldChange('category',  e.target.value)}\n                className={classes.textField}\n                margin=\"normal\"\n                fullWidth\n                variant=\"outlined\"\n              />\n\n              <TextField\n                required\n                label=\"Quote\"\n                multiline\n                onChange={e => this.onFieldChange('quote',  e.target.value)}\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n              />\n\n              <TextField\n                label=\"Author\"\n                onChange={e => this.onFieldChange('author',  e.target.value)}\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n              />\n            </form>\n            <DialogActions>\n              <Button onClick={this.handleClickClose} color=\"secondary\" variant=\"contained\">\n                Cancel\n              </Button>\n              <Button onClick={this.addQuote} color=\"primary\" variant=\"contained\">\n                Submit\n              </Button>\n            </DialogActions>\n          </Dialog>\n          <Snackbar\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'center',\n            }}\n            open={snackbarOpen}\n            autoHideDuration={6000}\n            onClose={this.closeSnackbar}\n            >\n              <CustomSnackbar\n                onClose={this.closeSnackbar}\n                variant={snackbarStyle}\n                message={snackbarMessage}\n              />\n            </Snackbar>\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tquotes: state.quotes.data,\n\t\tloading: state.quotes.loading,\n\t\terror: state.quotes.error,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn { \n    quotesActions: bindActionCreators({ ...actions.quotes }, dispatch),\n    quoteActions: bindActionCreators({ ...actions.quote }, dispatch),\n  }\n};\n\nexport default withRouter(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t)(withStyles(styles)(AddQuote))\n);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst CustomTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n  \n  const styles = theme => ({\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto',\n    },\n    table: {\n      minWidth: 700,\n    },\n    row: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default,\n      },\n    },\n  });\n\nclass QuoteRow extends Component {\n    \n\n    render() {\n        let quote = this.props.quote;\n        return (\n            <TableRow key={quote._id}>\n                <CustomTableCell component=\"th\" scope=\"row\">\n                    {quote.quote}\n                </CustomTableCell>\n                <CustomTableCell align=\"right\">{quote.author ? quote.author.name : '---'}</CustomTableCell>\n                <CustomTableCell align=\"right\">{quote.category ? quote.category.category : '---'}</CustomTableCell>\n            </TableRow>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tquotes: state.quotes.data,\n\t\tloading: state.quotes.loading,\n\t\terror: state.quotes.error,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn bindActionCreators({ ...actions.quotes }, dispatch);\n};\n\nexport default withRouter(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t)(withStyles(styles)(QuoteRow))\n);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport QuoteRow from './QuoteRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableCell from '@material-ui/core/TableCell';\n\nconst CustomTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n  \n  const styles = theme => ({\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto',\n    },\n    table: {\n      minWidth: 700,\n    },\n    row: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default,\n      },\n    },\n  });\n\nclass QuoteTable extends Component {\n\n    render() {\n        let quotes = this.props.quotes;\n        return (\n            <Paper>\n            <Table>\n                <TableHead>\n                <TableRow>\n                    <CustomTableCell>Quote</CustomTableCell>\n                    <CustomTableCell align=\"right\">Author</CustomTableCell>\n                    <CustomTableCell align=\"right\">Category</CustomTableCell>\n                </TableRow>\n                </TableHead>\n                <TableBody>\n                    {quotes.map((quote, index) => <QuoteRow quote={quote} key={index} /> )}\n                </TableBody>\n            </Table>\n            </Paper>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tquotes: state.quotes.data,\n\t\tloading: state.quotes.loading,\n\t\terror: state.quotes.error,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn bindActionCreators({ ...actions.quotes }, dispatch);\n};\n\nexport default withRouter(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t)(withStyles(styles)(QuoteTable))\n);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as actions from '../actions';\nimport AddQuote from './AddQuote';\nimport QuoteTable from './QuoteTable';\n\nclass Quotes extends Component {\n\n    constructor(props) {\n      super(props);\n    }\n\n    componentWillMount() {\n      const { quotes, loadQuotes } = this.props;\n      if (!quotes) {\n        loadQuotes();\n      }\n    }\n\n\n    render() {\n      const { quotes, loading, error } = this.props;\n      if (error) {\n        return (\n          <>\n            <p> {error} </p>\n          </>\n        );\n      }\n      return (\n        <>\n          <div>\n            <AddQuote />\n          </div>\n          <br />\n          <div>\n            {quotes ?\n              <QuoteTable />\n              // quotes.map((quote, index) => <li key={index}> {quote.quote}  </li> )\n              : <p>Loading...</p>\n            }\n          </div>\n          <br />\n        </>\n      );\n    }\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tquotes: state.quotes.data,\n\t\tloading: state.quotes.loading,\n\t\terror: state.quotes.error,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn bindActionCreators({ ...actions.quotes }, dispatch);\n};\n\nexport default withRouter(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t)(Quotes)\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport Quotes from './components/Quotes';\n\n// const REACT_APP_DB_HOST = process.env.REACT_APP_DB_HOST;\n// console.log(REACT_APP_DB_HOST);\n\nReactDOM.render(\n  <Provider store={store}>\n  <Router>\n    <Route path=\"/\" exact component={Quotes} />\n  </Router>\n  </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}